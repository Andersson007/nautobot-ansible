---
language: python
services:
  - docker

os: linux
dist: bionic

stages:
  - test
  - integration

env:
  global:
    - COLLECTION_NAMESPACE: "networktocode"
    - COLLECTION_NAME: "nautobot"
    - COLLECTION_VERSION: "2.0.1"

python:
  - 3.6
  - 3.7
  - 3.8
  - 3.9

install:
  - pip install -U pip
  - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
  - export PATH=$HOME/.poetry/bin:$PATH
  - poetry config virtualenvs.create false && poetry install
  - invoke start

script:
  - invoke unit

jobs:
  include:
    - name: "Python 3.6 - Nautobot 1.0.X - ansible-base 2.10.X"
      python: 3.6
      env:
        - INVOKE_NAUTOBOT_ANSIBLE_PYTHON_VER=3.6
        - INVOKE_NAUTOBOT_ANSIBLE_NAUTOBOT_VER=1.0.3
      script:
        - invoke integration
    - name: "Python 3.7 - Nautobot 1.1.X - Latest Ansible Core"
      python: 3.7
      env:
        - INVOKE_NAUTOBOT_ANSIBLE_PYTHON_VER=3.7
        - INVOKE_NAUTOBOT_ANSIBLE_NAUTOBOT_VER=1.1.1
      script:
        - poetry install ansible-core
        - invoke integration
    # - name: "Python 3.8 - Nautobot 1.1.X - Latest Ansible Core"
    #   python: 3.8
    #   env:
    #     - INVOKE_NAUTOBOT_ANSIBLE_PYTHON_VER=3.8
    #     - INVOKE_NAUTOBOT_ANSIBLE_NAUTOBOT_VER=develop
    #   script:
    #     - poetry install ansible-core
    #     - invoke integration

deploy:
  provider: script
  skip_cleanup: true
  script: ansible-galaxy collection publish $TRAVIS_BUILD_DIR/$COLLECTION_NAMESPACE-$COLLECTION_NAME-$COLLECTION_VERSION.tar.gz --api-key="$GALAXY_API_TOKEN"
  on:
    tags: true
